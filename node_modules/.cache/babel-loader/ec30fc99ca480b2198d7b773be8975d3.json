{"ast":null,"code":"import _slicedToArray from \"/Users/Bryan/Documents/meet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Bryan/Documents/meet/src/EventGenre.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n\nvar EventGenre = function EventGenre(_ref) {\n  var events = _ref.events;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#6a0dad'];\n  useEffect(function () {\n    setData(function () {\n      return getData();\n    });\n  }, [events]); //generating count Generes per Event\n\n  var getData = function getData() {\n    var genres = ['React', 'Angular', 'JavaScript', 'Node', 'jQuery'];\n    var data = genres.map(function (genre) {\n      //find count of events with genre in summary\n      var value = events.filter(function (event) {\n        return event.summary.includes(genre);\n      }).length;\n      return {\n        name: genre,\n        value: value\n      };\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    height: 400,\n    width: '100%',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    height: 400,\n    width: 400,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: data,\n    cx: 200,\n    cy: 200,\n    labelLine: false,\n    outerRadius: 80,\n    fill: \"#8884d8\",\n    dataKey: \"value\",\n    label: function label(_ref2) {\n      var name = _ref2.name,\n          percent = _ref2.percent;\n\n      if (percent > 0) {\n        return \"\".concat(name, \" \").concat((percent * 100).toFixed(0), \"%\");\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, data.map(function (entry, index) {\n    return /*#__PURE__*/React.createElement(Cell, {\n      key: \"cell-\".concat(index),\n      fill: COLORS[index % COLORS.length],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    });\n  }))));\n};\n\nexport default EventGenre;","map":{"version":3,"names":["React","useState","useEffect","PieChart","Pie","Cell","ResponsiveContainer","EventGenre","events","data","setData","COLORS","getData","genres","map","genre","value","filter","event","summary","includes","length","name","percent","toFixed","entry","index"],"sources":["/Users/Bryan/Documents/meet/src/EventGenre.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n\nconst EventGenre = ({ events }) => {\n  const [data, setData] = useState([]);\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#6a0dad'];\n\n  useEffect(() => {\n    setData(() => getData());\n  }, [events]);\n\n\n  //generating count Generes per Event\n  const getData = () => {\n    const genres = ['React', 'Angular', 'JavaScript', 'Node', 'jQuery'];\n\n    const data = genres.map((genre) => {\n      //find count of events with genre in summary\n      const value = events.filter((event) =>\n        event.summary.includes(genre)\n      ).length;\n      return { name: genre, value };\n    });\n    return data;\n  };\n\n\n  return (\n    <ResponsiveContainer height={400} width={'100%'}>\n      <PieChart height={400} width={400}>\n        <Pie\n          data={data}\n          cx={200}\n          cy={200}\n          labelLine={false}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          label={({ name, percent }) => {\n            if (percent > 0) {\n              return `${name} ${(percent * 100).toFixed(0)}%`;\n            }\n          }}\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default EventGenre;"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,mBAA9B,QAAyD,UAAzD;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgB;EAAA,IAAbC,MAAa,QAAbA,MAAa;;EAAA,gBACTP,QAAQ,CAAC,EAAD,CADC;EAAA;EAAA,IAC1BQ,IAD0B;EAAA,IACpBC,OADoB;;EAEjC,IAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAAf;EAEAT,SAAS,CAAC,YAAM;IACdQ,OAAO,CAAC;MAAA,OAAME,OAAO,EAAb;IAAA,CAAD,CAAP;EACD,CAFQ,EAEN,CAACJ,MAAD,CAFM,CAAT,CAJiC,CASjC;;EACA,IAAMI,OAAO,GAAG,SAAVA,OAAU,GAAM;IACpB,IAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,SAAV,EAAqB,YAArB,EAAmC,MAAnC,EAA2C,QAA3C,CAAf;IAEA,IAAMJ,IAAI,GAAGI,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAW;MACjC;MACA,IAAMC,KAAK,GAAGR,MAAM,CAACS,MAAP,CAAc,UAACC,KAAD;QAAA,OAC1BA,KAAK,CAACC,OAAN,CAAcC,QAAd,CAAuBL,KAAvB,CAD0B;MAAA,CAAd,EAEZM,MAFF;MAGA,OAAO;QAAEC,IAAI,EAAEP,KAAR;QAAeC,KAAK,EAALA;MAAf,CAAP;IACD,CANY,CAAb;IAOA,OAAOP,IAAP;EACD,CAXD;;EAcA,oBACE,oBAAC,mBAAD;IAAqB,MAAM,EAAE,GAA7B;IAAkC,KAAK,EAAE,MAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,QAAD;IAAU,MAAM,EAAE,GAAlB;IAAuB,KAAK,EAAE,GAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,GAAD;IACE,IAAI,EAAEA,IADR;IAEE,EAAE,EAAE,GAFN;IAGE,EAAE,EAAE,GAHN;IAIE,SAAS,EAAE,KAJb;IAKE,WAAW,EAAE,EALf;IAME,IAAI,EAAC,SANP;IAOE,OAAO,EAAC,OAPV;IAQE,KAAK,EAAE,sBAAuB;MAAA,IAApBa,IAAoB,SAApBA,IAAoB;MAAA,IAAdC,OAAc,SAAdA,OAAc;;MAC5B,IAAIA,OAAO,GAAG,CAAd,EAAiB;QACf,iBAAUD,IAAV,cAAkB,CAACC,OAAO,GAAG,GAAX,EAAgBC,OAAhB,CAAwB,CAAxB,CAAlB;MACD;IACF,CAZH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAcGf,IAAI,CAACK,GAAL,CAAS,UAACW,KAAD,EAAQC,KAAR;IAAA,oBACR,oBAAC,IAAD;MAAM,GAAG,iBAAUA,KAAV,CAAT;MAA4B,IAAI,EAAEf,MAAM,CAACe,KAAK,GAAGf,MAAM,CAACU,MAAhB,CAAxC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADQ;EAAA,CAAT,CAdH,CADF,CADF,CADF;AAwBD,CAhDD;;AAkDA,eAAed,UAAf"},"metadata":{},"sourceType":"module"}