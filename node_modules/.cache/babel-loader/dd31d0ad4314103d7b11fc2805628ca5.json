{"ast":null,"code":"import _slicedToArray from \"/Users/Bryan/Documents/meet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Bryan/Documents/meet/src/EventGenre.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nvar EventGenre = function EventGenre(_ref) {\n  var events = _ref.events;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    setData(function () {\n      return getData();\n    });\n  }, [events]);\n  var colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"#6A0DAD\"];\n\n  var getData = function getData() {\n    var genres = [\"React\", \"JavaScript\", \"Node\", \"jQuery\", \"AngularJS\"];\n    var data = genres.map(function (genre) {\n      var value = events.filter(function (event) {\n        return event.summary.split(\" \").includes(genre);\n      }).length;\n\n      if (genres === genre.length(0)) {\n        return null;\n      } else {\n        return {\n          name: genre,\n          value: value\n        };\n      }\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    height: 400,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    width: 100,\n    height: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: data,\n    cx: 400,\n    cy: 150,\n    labelLine: false,\n    outerRadius: 80,\n    fill: \"#fff\",\n    dataKey: \"value\",\n    nameKey: 'genre',\n    label: function label(_ref2) {\n      var name = _ref2.name,\n          percent = _ref2.percent;\n      return \"\".concat(name, \" \").concat((percent * 100).toFixed(0), \"%\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, data.map(function (entry, index) {\n    return /*#__PURE__*/React.createElement(Cell, {\n      key: \"cell-\".concat(index),\n      fill: colors[index % colors.length],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    });\n  }))));\n};\n\nexport default EventGenre;","map":{"version":3,"names":["React","useEffect","useState","PieChart","Pie","Cell","ResponsiveContainer","EventGenre","events","data","setData","getData","colors","genres","map","genre","value","filter","event","summary","split","includes","length","name","percent","toFixed","entry","index"],"sources":["/Users/Bryan/Documents/meet/src/EventGenre.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst EventGenre = ({ events }) => {\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setData(() => getData());\n  },\n    [events]\n  );\n\n  const colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"#6A0DAD\"];\n\n  const getData = () => {\n    const genres = [\"React\", \"JavaScript\", \"Node\", \"jQuery\", \"AngularJS\"];\n    const data = genres.map((genre) => {\n      const value = events.filter((event) => event.summary.split(\" \").includes(genre)).length;\n      if (genres === genre.length(0)) {\n        return null\n      } else {\n      return { name: genre, value };\n      }\n    });\n    return data;\n  };\n\n\n\n  return (\n    <ResponsiveContainer height={400}>\n      <PieChart width={100} height={100}>\n        <Pie\n          data={data}\n          cx={400}\n          cy={150}\n          labelLine={false}\n          outerRadius={80}\n          fill='#fff'\n          dataKey=\"value\"\n          nameKey={'genre'}\n          label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\n          ))}\n        </Pie>\n\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default EventGenre;"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,mBAA9B,QAAyD,UAAzD;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgB;EAAA,IAAbC,MAAa,QAAbA,MAAa;;EAAA,gBAETN,QAAQ,CAAC,EAAD,CAFC;EAAA;EAAA,IAE1BO,IAF0B;EAAA,IAEpBC,OAFoB;;EAIjCT,SAAS,CAAC,YAAM;IACdS,OAAO,CAAC;MAAA,OAAMC,OAAO,EAAb;IAAA,CAAD,CAAP;EACD,CAFQ,EAGP,CAACH,MAAD,CAHO,CAAT;EAMA,IAAMI,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAAf;;EAEA,IAAMD,OAAO,GAAG,SAAVA,OAAU,GAAM;IACpB,IAAME,MAAM,GAAG,CAAC,OAAD,EAAU,YAAV,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,WAA1C,CAAf;IACA,IAAMJ,IAAI,GAAGI,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAW;MACjC,IAAMC,KAAK,GAAGR,MAAM,CAACS,MAAP,CAAc,UAACC,KAAD;QAAA,OAAWA,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoB,GAApB,EAAyBC,QAAzB,CAAkCN,KAAlC,CAAX;MAAA,CAAd,EAAmEO,MAAjF;;MACA,IAAIT,MAAM,KAAKE,KAAK,CAACO,MAAN,CAAa,CAAb,CAAf,EAAgC;QAC9B,OAAO,IAAP;MACD,CAFD,MAEO;QACP,OAAO;UAAEC,IAAI,EAAER,KAAR;UAAeC,KAAK,EAALA;QAAf,CAAP;MACC;IACF,CAPY,CAAb;IAQA,OAAOP,IAAP;EACD,CAXD;;EAeA,oBACE,oBAAC,mBAAD;IAAqB,MAAM,EAAE,GAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,QAAD;IAAU,KAAK,EAAE,GAAjB;IAAsB,MAAM,EAAE,GAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,GAAD;IACE,IAAI,EAAEA,IADR;IAEE,EAAE,EAAE,GAFN;IAGE,EAAE,EAAE,GAHN;IAIE,SAAS,EAAE,KAJb;IAKE,WAAW,EAAE,EALf;IAME,IAAI,EAAC,MANP;IAOE,OAAO,EAAC,OAPV;IAQE,OAAO,EAAE,OARX;IASE,KAAK,EAAE;MAAA,IAAGc,IAAH,SAAGA,IAAH;MAAA,IAASC,OAAT,SAASA,OAAT;MAAA,iBAA0BD,IAA1B,cAAkC,CAACC,OAAO,GAAG,GAAX,EAAgBC,OAAhB,CAAwB,CAAxB,CAAlC;IAAA,CATT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAWGhB,IAAI,CAACK,GAAL,CAAS,UAACY,KAAD,EAAQC,KAAR;IAAA,oBACR,oBAAC,IAAD;MAAM,GAAG,iBAAUA,KAAV,CAAT;MAA4B,IAAI,EAAEf,MAAM,CAACe,KAAK,GAAGf,MAAM,CAACU,MAAhB,CAAxC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADQ;EAAA,CAAT,CAXH,CADF,CADF,CADF;AAsBD,CAjDD;;AAmDA,eAAef,UAAf"},"metadata":{},"sourceType":"module"}