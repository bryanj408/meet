{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","event","this","props","react_default","a","createElement","Fragment","className","summary","start","dateTime","timeZone","location","href","htmlLink","target","rel","description","onClick","toggleEventDetails","Component","EventList","events","map","key","id","src_Event","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","_this","locations","filter","toUpperCase","indexOf","setState","handleItemClicked","suggestion","updateEvents","_this2","type","onChange","onFocus","style","display","NumberOfEvents","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderNumber","errorText","mockData","kind","etag","status","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","toConsumableArray","Set","getToken","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","code","encodeCode","_yield$fetch$then$cat","access_token","wrap","_context","prev","next","encodeURIComponent","fetch","then","res","json","catch","error","sent","localStorage","setItem","abrupt","stop","_x","apply","arguments","checkToken","_ref2","_callee2","accessToken","result","_context2","concat","_x2","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","_ref3","_callee3","token","url","_context3","NProgress","startsWith","done","getAccessToken","axios","get","data","JSON","stringify","_ref4","_callee4","tokenCheck","searchParams","results","authUrl","_context4","getItem","t0","removeItem","URLSearchParams","search","App","numberOfEvents","locationEvents","mounted","src_CitySearch","src_EventList","src_NumberOfEvents","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.b17d293d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nclass Event extends Component {\n\n    state = { show: false };\n\n    render() {\n        const { event } = this.props;\n        return (\n          <>\n            <div className=\"event\">\n              <h1 className=\"event-summary-title\">{event.summary}</h1>\n              <p className=\"event-info\">\n                {event.start.dateTime} {event.start.timeZone} {event.location}\n              </p>\n              {this.state.show && (\n                <>\n                  <h2 className=\"event-about-title\">About event:</h2>\n                  <a\n                    href={event.htmlLink}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"event-htmlLink\"\n                  >\n                    See details on Google Calendar\n                  </a>\n                  <p className=\"event-description\">{event.description}</p>\n                </>\n              )}\n              {!this.state.show ? (\n                <button\n                  className=\"event-showDetails-btn\"\n                  onClick={this.toggleEventDetails}\n                >\n                  Show Details\n                </button>\n              ) : (\n                <button\n                  className=\"event-hideDetails-btn\"\n                  onClick={this.toggleEventDetails}\n                >\n                  Hide Details\n                </button>\n              )}\n            </div>\n          </>\n        );\n      }\n    }\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n          <ul className=\"EventList\">\n            {events.map(event => \n              <li key={event.id}> \n                <Event event={event} />\n              </li>\n            )}\n          </ul>\n        );\n      }\n    }\n\nexport default EventList;","import React, { Component } from 'react';\n\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined\n      }\n    \n      handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n          return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n          query: value,\n          suggestions,\n        });\n      };\n\n      handleItemClicked = (suggestion) => {\n        this.setState({\n          query: suggestion,\n          showSuggestions: false\n        });\n      \n        this.props.updateEvents(suggestion);\n      }\n    \n  render() {\n    return (\n      <div className='CitySearch'>\n        <input\n            type='text'\n            className='city'\n            value={this.state.query}\n            onChange={this.handleInputChanged}\n            onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n   <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n  {this.state.suggestions.map((suggestion) => (\n    <li\n      key={suggestion}\n      onClick={() => this.handleItemClicked(suggestion)}\n    >{suggestion}</li>\n        ))}  \n        <li onClick={() => this.handleItemClicked(\"all\")}>\n  <b>See all cities</b>\n</li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n\n","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n    handleInputChanged = (event) => {\n        if (event.target.value <= 0 || event.target.value > 32) {\n            this.setState({\n                renderNumber: event.target.value,\n                errorText: 'Please enter a number between 1 and 32'\n            })\n        } else {\n            this.props.updateEvents(undefined, event.target.value);\n            this.setState({\n                renderNumber: event.target.value,\n                errorText: ''\n            });\n        }\n    }\n\n    constructor() {\n        super();\n        this.state = {\n            renderNumber: 32,\n            errorText: ''\n        }\n    }\n\n    render() {\n        const { renderNumber } = this.state;\n\n        return (\n            <div className=\"number-of-events\">\n                <p className=\"input-label\">Number of Events:</p>\n                \n                <input id=\"render-number\" type=\"number\" className=\"render-number\" value={renderNumber} onChange={this.handleInputChanged}></input>\n            </div>\n        );\n    }\n}\n\nexport default NumberOfEvents;","const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"organizer\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"start\": {\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n         \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n         \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n       },\n       //2nd event\n       {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"organizer\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"start\": {\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n         \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n         \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n       },\n]\n\nexport { mockData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n  };\n\n  const getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        'https://s98kdbslgb.execute-api.us-west-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .catch((error) => error);\n  \n    access_token && localStorage.setItem(\"access_token\", access_token);\n  \n    return access_token;\n  };\n  \n   const checkToken = async (accessToken) => {\n    const result = await fetch(\n      `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n      .then((res) => res.json())\n      .catch((error) => error.json());\n  \n    return result;\n  };\n  \n\n  const removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n      var newurl =\n        window.location.protocol +\n        \"//\" +\n        window.location.host +\n        window.location.pathname;\n      window.history.pushState(\"\", \"\", newurl);\n    } else {\n      newurl = window.location.protocol + \"//\" + window.location.host;\n      window.history.pushState(\"\", \"\", newurl);\n    }\n  };\n\n  export const getEvents = async () => {\n    NProgress.start();\n  \n    if (window.location.href.startsWith(\"http://localhost\")) {\n      NProgress.done();\n      return mockData;\n    }\n  \n  \n    const token = await getAccessToken();\n    if (token) {\n      removeQuery();\n      const url = 'https://s98kdbslgb.execute-api.us-west-2.amazonaws.com/dev/api/get-events' + '/' + token;\n      const result = await axios.get(url);\n      if (result.data) {\n        var locations = extractLocations(result.data.events);\n        localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n        localStorage.setItem(\"locations\", JSON.stringify(locations));\n      }\n      NProgress.done();\n      return result.data.events;\n    }\n  };\n\n  export const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n      await localStorage.removeItem(\"access_token\");\n      const searchParams = new URLSearchParams(window.location.search);\n      const code = await searchParams.get(\"code\");\n      if (!code) {\n        const results = await axios.get(\n            \"https://s98kdbslgb.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url\"\n        );\n        const { authUrl } = results.data;\n        return (window.location.href = authUrl);\n      }\n      return code && getToken(code);\n    }\n    return accessToken;\n};","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents,extractLocations } from './api';\nimport './nprogress.css';\n\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') \n        ? events \n        : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* istanbul ignore file */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* istanbul ignore file */\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}